// Copyright (C) 2024  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 23.1 (Build Build 993 05/14/2024)
// Created on Sat Mar 29 18:00:27 2025

sequence_detector sequence_detector_inst
(
	.clock(clock_sig) ,	// input  clock_sig
	.sequence_in(sequence_in_sig) ,	// input [9:0] sequence_in_sig
	.reset_n(reset_n_sig) ,	// input  reset_n_sig
	.sequence_out(sequence_out_sig) ,	// output [31:0] sequence_out_sig
	.ready(ready_sig) 	// output  ready_sig
);

defparam sequence_detector_inst.BLACK_LEVEL = 282;
defparam sequence_detector_inst.WHITE_LEVEL = 966;
defparam sequence_detector_inst.TRIGGER_WIDTH = 256;
