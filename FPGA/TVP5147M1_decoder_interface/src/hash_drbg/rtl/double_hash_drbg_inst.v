// Copyright (C) 2024  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 23.1 (Build Build 993 05/14/2024)
// Created on Wed Mar 26 17:18:02 2025

hash_drbg_sha256 hash_drbg_sha256_inst
(
	.entropy(entropy_sig) ,	// input [255:0] entropy_sig
	.is_master_mode(is_master_mode_sig) ,	// input  is_master_mode_sig
	.reset_n(reset_n_sig) ,	// input  reset_n_sig
	.clk(clk_sig) ,	// input  clk_sig
	.next_seed(next_seed_sig) ,	// input  next_seed_sig
	.next_bits(next_bits_sig) ,	// input  next_bits_sig
	.init(init_sig) ,	// input  init_sig
	.init_ready(init_ready_sig) ,	// output  init_ready_sig
	.random_bits(random_bits_sig) ,	// output [255:0] random_bits_sig
	.reseed_counter(reseed_counter_sig) ,	// output [63:0] reseed_counter_sig
	.next_bits_ready(next_bits_ready_sig) 	// output  next_bits_ready_sig
);

defparam hash_drbg_sha256_inst.SEED_GENERATOR_MAX_CYCLE = 65536;
defparam hash_drbg_sha256_inst.BITS_GENERATOR_MAX_CYCLE = 37500;
